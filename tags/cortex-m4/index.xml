<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cortex M4 on 暐宗&#39;s Blog</title>
    <link>https://weizongchen.github.io/tags/cortex-m4/</link>
    <description>Recent content in Cortex M4 on 暐宗&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 13 Sep 2022 23:24:00 +0800</lastBuildDate><atom:link href="https://weizongchen.github.io/tags/cortex-m4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解決 MA35D1 M4 SRAM 128KB 不夠，調用A35 DDR space 384KB 的方法</title>
      <link>https://weizongchen.github.io/blog/ma35d1_rtp_memory/</link>
      <pubDate>Tue, 13 Sep 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_rtp_memory/</guid>
      <description>跟新唐過去Cortex® M4 的 Feature 不一樣的地方 M4 speed 調升至 180 MHz 本章的重點，SRAM 有 128KB 以及 可以控制DDR 384KB Support Peripheral 1.</description>
    </item>
    
    <item>
      <title>M4 把資料寫進 FMC的方法</title>
      <link>https://weizongchen.github.io/blog/m4_fmc/</link>
      <pubDate>Sun, 11 Sep 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/m4_fmc/</guid>
      <description>PC 接好onboard的 nulink2 然後設定 Keil 的 option 這邊可以看到上圖我們開啟了412KB 的 flash 要使用</description>
    </item>
    
    <item>
      <title>使用M460開發版的 I2C 去要 BH1750 照度計sensor的data</title>
      <link>https://weizongchen.github.io/blog/i2c_bh1750/</link>
      <pubDate>Thu, 21 Jul 2022 13:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/i2c_bh1750/</guid>
      <description>找M460開發版的2根空的 I2C 由上圖可以知道 I2C Pin角選
PA5 SCL 板上 PIN75
PA4 SDA 板上 PIN76</description>
    </item>
    
    <item>
      <title> PWM 的 應用範例 </title>
      <link>https://weizongchen.github.io/blog/pwm/</link>
      <pubDate>Wed, 13 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/pwm/</guid>
      <description>BSP EPWM 我是找 BSP 使用的 PWM PIN 角， 但還是用pinconfigure 看一下</description>
    </item>
    
    <item>
      <title>Timer Toggle 使用邏輯分析儀量測timer toggle (by M460)</title>
      <link>https://weizongchen.github.io/blog/timer_init_timer0_toggle/</link>
      <pubDate>Wed, 13 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/timer_init_timer0_toggle/</guid>
      <description>Timer0 電路位置 由pinconfigure 可以知道Timer0 在 pin 1 (PB5) 接著
設定 Timer0 pin 角 //&amp;mdash;PIN&amp;mdash;- /* Set timer toggle out pin */ SET_TM0_PB5();</description>
    </item>
    
    <item>
      <title>Button 的各種說明</title>
      <link>https://weizongchen.github.io/blog/btn/</link>
      <pubDate>Mon, 11 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/btn/</guid>
      <description>Button 的 狀態討論 /*---------------------------------------------------------------------------------------------------------*//* Main Function *//*---------------------------------------------------------------------------------------------------------*/int32_t main(void){uint16_t cnt = 0;uint8_t STA = 0;/* Unlock protected registers */SYS_UnlockReg();/* Init System, peripheral clock and multi-function I/O */SYS_Init();/* Lock protected registers */SYS_LockReg();/* Init UART0 for printf */UART0_Init();while(1) {STA &amp;lt;&amp;lt;= 1;STA += PH0;printf(&amp;#34;%d \n&amp;#34;, PH0);TIMER_Delay(TIMER0, 1000000);STA &amp;amp;= 3;if(STA == 2) {cnt++;//printf(&amp;#34;%d &amp;#34;, cnt);}//TIMER_Delay(TIMER0, 1000000);}} STA 原始值 00000000(0)</description>
    </item>
    
    <item>
      <title>Timer Delay 說明 (by M460)</title>
      <link>https://weizongchen.github.io/blog/timer_delay/</link>
      <pubDate>Sun, 10 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/timer_delay/</guid>
      <description>加入Timer的Driver 在 SYS_Init() 時 ，加入TMR0 的 clock source /*---------------------------------------------------------------------------------------------------------*//* Initialization for sample code *//*---------------------------------------------------------------------------------------------------------*//* Enable TIMER module clock */CLK_EnableModuleClock(TMR0_MODULE);/* Select TIMER clock source */CLK_SetModuleClock(TMR0_MODULE, CLK_CLKSEL1_TMR0SEL_HIRC, 0); 在 SYS_Init() 時 ，加入TMR0 的 clock source while(1) {PH4 = 1;TIMER_Delay(TIMER0, 1000000);PH4 = 0;TIMER_Delay(TIMER0, 1000000);} 邏輯分析儀量測 LED 訊號 用 Timer0 控制 LED 1秒亮 1秒滅 /**************************************************************************//*** @file main.</description>
    </item>
    
    <item>
      <title>Keil IDE Debug Mode Memory window data not update?</title>
      <link>https://weizongchen.github.io/blog/keil_debug_memoryupdate/</link>
      <pubDate>Sun, 19 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/keil_debug_memoryupdate/</guid>
      <description>在Keil IDE 的 Debug Mode 時 Memory window data 突然不實時更新了?</description>
    </item>
    
    <item>
      <title>Keil IDE 在啟動 project 時，會自己上網下載 一堆不是新唐的pack</title>
      <link>https://weizongchen.github.io/blog/keil_import_pack/</link>
      <pubDate>Fri, 17 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/keil_import_pack/</guid>
      <description>Keil IDE 在啟動 project 時，會自己上網下載 一堆不是新唐的pack
下圖看到時趕緊關掉，不然他會一直download 不是新唐的東西。
這邊選&amp;quot;是&amp;quot; 跳過這裡</description>
    </item>
    
    <item>
      <title>Keil IDE 16K Code size 限制?</title>
      <link>https://weizongchen.github.io/blog/keil_ide_licence/</link>
      <pubDate>Thu, 16 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/keil_ide_licence/</guid>
      <description>如果你不是商業使用 !
如果你不是商業使用 !
如果你不是商業使用 !
很重要所以說三次! 所以如果你是個人評估使用
ARM 對這個 MDK-Community 說明</description>
    </item>
    
    <item>
      <title>GPIO 說明</title>
      <link>https://weizongchen.github.io/blog/gpio_introduce/</link>
      <pubDate>Fri, 10 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/gpio_introduce/</guid>
      <description>User Manual https://www.nuvoton.com/export/resource-files/UM_NuMaker-ETM-M487_User_Manual_EN_Rev1.01.pdf
通用 I/O (GPIO) 概述 M480 系列多達118 個通用I/O管腳和其他功能管腳共享，這取決於芯片的配置。 118個管腳分配在PA, PB, PC, PD, PE, PF, PG 和 PH這8個端口上。 PA, PB, PE和PG有16個管腳，PC，PD有15個管腳，PF，PH有12個管腳。每個管腳都是獨立的，都有相應的寄存器位來控制管腳功能模式與數據。</description>
    </item>
    
    <item>
      <title>MA35D1 M4 使用設定</title>
      <link>https://weizongchen.github.io/blog/ma35d1_rtp/</link>
      <pubDate>Tue, 07 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_rtp/</guid>
      <description>Description Enable the Remoteproc device driver in the Linux kernel.</description>
    </item>
    
  </channel>
</rss>
