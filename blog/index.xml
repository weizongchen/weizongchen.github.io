<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on 暐宗&#39;s Blog</title>
    <link>https://weizongchen.github.io/blog/</link>
    <description>Recent content in Blogs on 暐宗&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 06 Mar 2024 23:24:00 +0800</lastBuildDate><atom:link href="https://weizongchen.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VMware Workstation 17 Player安裝Ubuntu 22.04和Windows 11共用資料夾</title>
      <link>https://weizongchen.github.io/blog/vmware_ubuntu_windows_shared_folders/</link>
      <pubDate>Wed, 06 Mar 2024 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/vmware_ubuntu_windows_shared_folders/</guid>
      <description>1.連續按兩下桌面的捷徑圖示，開啟VMware Player。 2.選擇Ubuntu 22.04虛擬機器，點選「Edit virtual machine settings」。 3.選擇「Options」的索引標籤。 4.選擇「Shared Folders」，點選「Always enabled」。 5.</description>
    </item>
    
    <item>
      <title>Keil 儲存在sram 中的 rawdata 數據到硬碟</title>
      <link>https://weizongchen.github.io/blog/keil_save_rawdata/</link>
      <pubDate>Tue, 05 Mar 2024 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/keil_save_rawdata/</guid>
      <description>以下圖示操作 save D:\名稱 位置, 位置+大小 </description>
    </item>
    
    <item>
      <title>MA35D1 開啟 HM1055</title>
      <link>https://weizongchen.github.io/blog/ma35d1_hm1055/</link>
      <pubDate>Mon, 06 Nov 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_hm1055/</guid>
      <description>Device Tree 設定 Device Tree - ccap0 /dev/video0 是 CCAP</description>
    </item>
    
    <item>
      <title>MA35D1 Update Device Tree and Check change data</title>
      <link>https://weizongchen.github.io/blog/update_device_tree/</link>
      <pubDate>Sun, 05 Nov 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/update_device_tree/</guid>
      <description>Update Device Tree 設定 compile 後 ，直接更換 SD 卡上的 Device Tree，不用整個SD 重新燒錄 $ bitbake linux-ma35d1 -C compile 下面是腳本，隨便放在家目錄都可以</description>
    </item>
    
    <item>
      <title>MA35D1 systemd-journald</title>
      <link>https://weizongchen.github.io/blog/close_systemd_service_journal/</link>
      <pubDate>Sat, 04 Nov 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/close_systemd_service_journal/</guid>
      <description>Update Device Tree 設定 status :
systemctl status systemd-journald mv /lib/systemd/system/systemd-journald.</description>
    </item>
    
    <item>
      <title>M460 RTOS Keil RTX 版本</title>
      <link>https://weizongchen.github.io/blog/m460_rtos_thread/</link>
      <pubDate>Mon, 04 Sep 2023 10:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/m460_rtos_thread/</guid>
      <description>Manage Run-Time Emvironment 選擇 RTOS1(API) Keil RTX 的版本 現在最新應該是RTOS2 (API) Keil RTX5，但是這篇是講解API1的&amp;hellip;.</description>
    </item>
    
    <item>
      <title>使用M460開發版的 ADC 去要 GY-61 Acc 加速度計的data</title>
      <link>https://weizongchen.github.io/blog/m460_adc_gy61/</link>
      <pubDate>Sun, 03 Sep 2023 13:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/m460_adc_gy61/</guid>
      <description>參考 Opennuvoton 的 EADC_ADINT_Trigger 範例 觀察到 user manual 的 PB0 PB1 PB2 是有接出來可以用的，所以:</description>
    </item>
    
    <item>
      <title>ml_example_for_MM10 </title>
      <link>https://weizongchen.github.io/blog/ml_example_for_mm10/</link>
      <pubDate>Wed, 30 Aug 2023 09:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ml_example_for_mm10/</guid>
      <description>智慧城市 Smart City 在安全技術的加持下，人們的生活品質得到了顯著提升。各城市紛紛運用先進技術，預測服務需求，實現自動化服務提供，同時簡化服務流程。作為值得信賴且經驗豐富的合作夥伴，恩智浦不斷協助城市提升能源效率、彈性適應能力、敏捷度和環保能力。無論是城市智能化邁向，還是可持續發展目標，恩智浦都在背後提供堅實支持，助力城市邁向更美好的未來。
智能照明解決方案 新唐科技致力於為智慧城市提供先進的技術支援，透過其優越的解決方案，為多元的應用場景提供交互性和智能化的構建模組，從而為城市的發展帶來革命性的影響。
首先，新唐科技的智能照明解決方案是通過微控制器（MCU）等技術來實現的。
這些MCU可以連接到照明設備，並通過智能化的控制算法，根據不同的時間、光線和人流量等參數，自動調節燈光的亮度和開關，從而達到節能的目的。
此外，MCU還能夠連接到城市管理中心，實現遠程監控和控制，提高照明系統的運營效率。
智能充電樁 在電動汽車充電領域，MCU是實現智能充電管理的關鍵技術。通過在充電站和充電樁上部署MCU，可以實現對充電過程的監控和控制。MCU能夠讀取電動汽車的信息，調整充電功率，實現峰谷電價的合理利用，從而實現高效、節能的充電過程。</description>
    </item>
    
    <item>
      <title>簡單說明Linux驅動程式</title>
      <link>https://weizongchen.github.io/blog/ldd_brief_intro/</link>
      <pubDate>Sat, 05 Aug 2023 09:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ldd_brief_intro/</guid>
      <description>Char Device Kernel設備驅動程式是將底層硬體公開給系統其餘部分的機制。
作為嵌入式系統的開發者，您需要了解這些設備驅動程式如何適合整體架構，以及如何從用戶空間程式中訪問它們。
您的系統可能會有一些新奇的硬體組件，您需要找到一種方法來訪問它們。
在許多情況下，您會發現已經為您提供了一些設備驅動程式，您可以在不編寫任何Kernel代碼的情況下實現所需的一切。
例如，您可以使用 sysfs 中的文件來操作 GPIO 引腳和 LED，並且有庫可以訪問串行匯流排，包括 SPI（串行週邊介面）和 I2C（雙線串行匯流排）。</description>
    </item>
    
    <item>
      <title>N9H30 Buildroot Quick Start</title>
      <link>https://weizongchen.github.io/blog/n9h30_quickstart/</link>
      <pubDate>Thu, 03 Aug 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/n9h30_quickstart/</guid>
      <description>opennuvoton N9H30 https://github.com/OpenNuvoton/MPU-Family
Start up with VMware This VMware Image offers a Linux development environment for N9H30.</description>
    </item>
    
    <item>
      <title>MA35D1 Buildroot 打開 openssh</title>
      <link>https://weizongchen.github.io/blog/ma35d1_openssh/</link>
      <pubDate>Tue, 01 Aug 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_openssh/</guid>
      <description>在Buildroot中啟用SSH功能需要進行以下步驟： 1. 進入Buildroot目錄，啟動menuconfig配置工具： sudo make menuconfigTarget packages -&amp;gt; Networking applications -&amp;gt; [*]openssh[*]ethtool [*] enable pretty printing [*]dhcpcd #順便看要不要make -j16 後重燒 SD 2.</description>
    </item>
    
    <item>
      <title>MA35D1 LED Button Control</title>
      <link>https://weizongchen.github.io/blog/ma35d1_led_button/</link>
      <pubDate>Tue, 01 Aug 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_led_button/</guid>
      <description>控制LED燈 亮滅 直接控制以下節點就可以
# ls# cat /sys/class/leds/LEDLED0/ LED2/# cat /sys/class/leds/LED0/brightness0# cat /sys/class/leds/LED2/brightness0 # echo 1 &amp;gt; /sys/class/leds/LED0/brightness# cat /sys/class/leds/LED0/brightness1# echo 1 &amp;gt; /sys/class/leds/LED2/brightness# cat /sys/class/leds/LED0/brightness 控制 BTN 要控制 BTN 前，可以先確認板子上的button 是不是 work的情況 可以使用跟上面LED一樣，去cat看看button</description>
    </item>
    
    <item>
      <title>MA35D1 Control </title>
      <link>https://weizongchen.github.io/blog/ma35d1_pwm_control/</link>
      <pubDate>Mon, 05 Jun 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_pwm_control/</guid>
      <description>要找MA35D1的兩根pin腳給PWM 新唐定義 PG1 PG2 的地方 設定 device tree Kernel configuration settin</description>
    </item>
    
    <item>
      <title> M460 Level0 說明</title>
      <link>https://weizongchen.github.io/blog/m460_level0/</link>
      <pubDate>Thu, 25 May 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/m460_level0/</guid>
      <description>控制 LED 0x4000_4000 是一個32位元的記憶體位址，所以我需要一個 uint32_t* 去接他
uint32_t* ptr_mode;ptr_mode = (uint32_t*)(0x40004000 + 0x1c0);*ptr_mode = 0x00000100;uint32_t* ptr_value;ptr_value = (uint32_t*)(0x40004000 + 0x1c8);*ptr_value = 0xFFFFFFEF; 負源觸發補充說明 : 也可以使用 Keil 的 tool 看，如下圖所示:</description>
    </item>
    
    <item>
      <title> 將Tensorflow Lite Library加到MA35D1的Yocto中 </title>
      <link>https://weizongchen.github.io/blog/add_tensorflow_lite_to_ma35d1_yocto/</link>
      <pubDate>Fri, 03 Feb 2023 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/add_tensorflow_lite_to_ma35d1_yocto/</guid>
      <description>yocto添加網路上現有的meta layer 查找菜譜 可以點下面連結去首頁
OpenEmbedded Layer Index
也可以直接點下面是 Tensorflow Lite 的資源</description>
    </item>
    
    <item>
      <title>MA35D1 extra package in Yocto project after the image is built</title>
      <link>https://weizongchen.github.io/blog/ma35d1_extra_package_yocto/</link>
      <pubDate>Mon, 17 Oct 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_extra_package_yocto/</guid>
      <description>Open local.conf nuvoton@84d536ecc45d:~/shared/yocto/build$ vim conf/local.conf For example : add pip3 and devmem2 CORE_IMAGE_EXTRA_INSTALL += &amp;ldquo;devmem2&amp;rdquo;</description>
    </item>
    
    <item>
      <title>MA35D1 devmem2 Read / Write memory address</title>
      <link>https://weizongchen.github.io/blog/ma35d1_devmem2/</link>
      <pubDate>Sun, 16 Oct 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_devmem2/</guid>
      <description>devmem2 Tool read register devmem2 0x40600014 TRM SPI Status Register (SPIx_STATUS) write 32bit to register devmem2 0x40600014 w 0x0058112 </description>
    </item>
    
    <item>
      <title>MA35D1 開機啟動位置</title>
      <link>https://weizongchen.github.io/blog/ma35d1_startup_execute/</link>
      <pubDate>Sun, 16 Oct 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_startup_execute/</guid>
      <description>MA35D1 QT startup path vi /etc/profile.d/qt5-env.sh You can write that you want to auto execute command or script here.</description>
    </item>
    
    <item>
      <title>MA35D1 IoT 的 SPI 介面使用</title>
      <link>https://weizongchen.github.io/blog/ma35d1_spi/</link>
      <pubDate>Thu, 06 Oct 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_spi/</guid>
      <description>MA35D1 SPI Device Tree 路徑 : ~/yocto/build/tmp-glibc/work-shared/numaker-iot-ma35d16f90/kernel-source/arch/arm64/boot/dts/nuvoton/ma35d1.dtsi
spi0: spi@40600000 {compatible = &amp;#34;nuvoton,ma35d1-spi&amp;#34;;reg = &amp;lt;0x0 0x40600000 0x0 0x10000&amp;gt;;interrupts = &amp;lt;GIC_SPI 89 IRQ_TYPE_LEVEL_HIGH&amp;gt;;clocks = &amp;lt;&amp;amp;clk SPI0_GATE&amp;gt;;dmas = &amp;lt;&amp;amp;pdma1 4&amp;gt;,&amp;lt;&amp;amp;pdma1 5&amp;gt;;dma-names = &amp;#34;tx&amp;#34;,&amp;#34;rx&amp;#34;;pdma_reqsel_tx = &amp;lt;60&amp;gt;;pdma_reqsel_rx = &amp;lt;61&amp;gt;;use_pdma = &amp;lt;0&amp;gt;;num_cs = &amp;lt;2&amp;gt;;lsb = &amp;lt;0&amp;gt;;sleep = &amp;lt;0&amp;gt;;txbitlen = &amp;lt;8&amp;gt;;bus_num = &amp;lt;2&amp;gt;;spimode = &amp;lt;0&amp;gt;;mrxphase = &amp;lt;0&amp;gt;;spi-max-frequency = &amp;lt;10000000&amp;gt;;status = &amp;#34;disabled&amp;#34;;}; 路徑 : ~/yocto/build/tmp-glibc/work-shared/numaker-iot-ma35d16f90/kernel-source/arch/arm64/boot/dts/nuvoton/ma35d1-iot-512m.</description>
    </item>
    
    <item>
      <title>解決 MA35D1 M4 SRAM 128KB 不夠，調用A35 DDR space 384KB 的方法</title>
      <link>https://weizongchen.github.io/blog/ma35d1_rtp_memory/</link>
      <pubDate>Tue, 13 Sep 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_rtp_memory/</guid>
      <description>跟新唐過去Cortex® M4 的 Feature 不一樣的地方 M4 speed 調升至 180 MHz 本章的重點，SRAM 有 128KB 以及 可以控制DDR 384KB Support Peripheral 1.</description>
    </item>
    
    <item>
      <title>M4 把資料寫進 FMC的方法</title>
      <link>https://weizongchen.github.io/blog/m4_fmc/</link>
      <pubDate>Sun, 11 Sep 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/m4_fmc/</guid>
      <description>PC 接好onboard的 nulink2 然後設定 Keil 的 option 這邊可以看到上圖我們開啟了412KB 的 flash 要使用</description>
    </item>
    
    <item>
      <title>pi3ldd</title>
      <link>https://weizongchen.github.io/blog/pi3ldd/</link>
      <pubDate>Tue, 06 Sep 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/pi3ldd/</guid>
      <description>Raspberry pi 3 Linux Device Driver
下載上課用Raspberry Pi image檔 (Linux 核心 4.</description>
    </item>
    
    <item>
      <title>Error:Flash Download failed - Cortex-M0</title>
      <link>https://weizongchen.github.io/blog/error_flash_download_failed_cortex-m0/</link>
      <pubDate>Fri, 22 Jul 2022 13:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/error_flash_download_failed_cortex-m0/</guid>
      <description>原因是這裡可能空白 至少要選一個</description>
    </item>
    
    <item>
      <title>SemiHost 使用方法</title>
      <link>https://weizongchen.github.io/blog/debug_enable_semihost/</link>
      <pubDate>Thu, 21 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/debug_enable_semihost/</guid>
      <description>開啟 Option Define 好 DEBUG_ENABLE_SEMIHOST 在 Debug Mode 的時候打開 UART #1 可以看到 UART0 的輸出 </description>
    </item>
    
    <item>
      <title>使用M460開發版的 I2C 去要 BH1750 照度計sensor的data</title>
      <link>https://weizongchen.github.io/blog/i2c_bh1750/</link>
      <pubDate>Thu, 21 Jul 2022 13:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/i2c_bh1750/</guid>
      <description>找M460開發版的2根空的 I2C 由上圖可以知道 I2C Pin角選
PA5 SCL 板上 PIN75
PA4 SDA 板上 PIN76</description>
    </item>
    
    <item>
      <title> PWM 的 應用範例 </title>
      <link>https://weizongchen.github.io/blog/pwm/</link>
      <pubDate>Wed, 13 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/pwm/</guid>
      <description>BSP EPWM 我是找 BSP 使用的 PWM PIN 角， 但還是用pinconfigure 看一下</description>
    </item>
    
    <item>
      <title>Timer Toggle 使用邏輯分析儀量測timer toggle (by M460)</title>
      <link>https://weizongchen.github.io/blog/timer_init_timer0_toggle/</link>
      <pubDate>Wed, 13 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/timer_init_timer0_toggle/</guid>
      <description>Timer0 電路位置 由pinconfigure 可以知道Timer0 在 pin 1 (PB5) 接著
設定 Timer0 pin 角 //&amp;mdash;PIN&amp;mdash;- /* Set timer toggle out pin */ SET_TM0_PB5();</description>
    </item>
    
    <item>
      <title>安裝新唐 Pinconfigure </title>
      <link>https://weizongchen.github.io/blog/install_and_update_pinconfigure/</link>
      <pubDate>Wed, 13 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/install_and_update_pinconfigure/</guid>
      <description>新唐 Pinconfigure 地址 https://www.nuvoton.com/resource-download.jsp?tp_GUID=SW1320200319135912
當發現我要的IC 沒有出現在 我要的M460 沒有在 Pinconfigure 選單</description>
    </item>
    
    <item>
      <title>Button 的各種說明</title>
      <link>https://weizongchen.github.io/blog/btn/</link>
      <pubDate>Mon, 11 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/btn/</guid>
      <description>Button 的 狀態討論 /*---------------------------------------------------------------------------------------------------------*//* Main Function *//*---------------------------------------------------------------------------------------------------------*/int32_t main(void){uint16_t cnt = 0;uint8_t STA = 0;/* Unlock protected registers */SYS_UnlockReg();/* Init System, peripheral clock and multi-function I/O */SYS_Init();/* Lock protected registers */SYS_LockReg();/* Init UART0 for printf */UART0_Init();while(1) {STA &amp;lt;&amp;lt;= 1;STA += PH0;printf(&amp;#34;%d \n&amp;#34;, PH0);TIMER_Delay(TIMER0, 1000000);STA &amp;amp;= 3;if(STA == 2) {cnt++;//printf(&amp;#34;%d &amp;#34;, cnt);}//TIMER_Delay(TIMER0, 1000000);}} STA 原始值 00000000(0)</description>
    </item>
    
    <item>
      <title>Timer Delay 說明 (by M460)</title>
      <link>https://weizongchen.github.io/blog/timer_delay/</link>
      <pubDate>Sun, 10 Jul 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/timer_delay/</guid>
      <description>加入Timer的Driver 在 SYS_Init() 時 ，加入TMR0 的 clock source /*---------------------------------------------------------------------------------------------------------*//* Initialization for sample code *//*---------------------------------------------------------------------------------------------------------*//* Enable TIMER module clock */CLK_EnableModuleClock(TMR0_MODULE);/* Select TIMER clock source */CLK_SetModuleClock(TMR0_MODULE, CLK_CLKSEL1_TMR0SEL_HIRC, 0); 在 SYS_Init() 時 ，加入TMR0 的 clock source while(1) {PH4 = 1;TIMER_Delay(TIMER0, 1000000);PH4 = 0;TIMER_Delay(TIMER0, 1000000);} 邏輯分析儀量測 LED 訊號 用 Timer0 控制 LED 1秒亮 1秒滅 /**************************************************************************//*** @file main.</description>
    </item>
    
    <item>
      <title>Keil IDE Debug Mode Memory window data not update?</title>
      <link>https://weizongchen.github.io/blog/keil_debug_memoryupdate/</link>
      <pubDate>Sun, 19 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/keil_debug_memoryupdate/</guid>
      <description>在Keil IDE 的 Debug Mode 時 Memory window data 突然不實時更新了?</description>
    </item>
    
    <item>
      <title>Keil IDE 在啟動 project 時，會自己上網下載 一堆不是新唐的pack</title>
      <link>https://weizongchen.github.io/blog/keil_import_pack/</link>
      <pubDate>Fri, 17 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/keil_import_pack/</guid>
      <description>Keil IDE 在啟動 project 時，會自己上網下載 一堆不是新唐的pack
下圖看到時趕緊關掉，不然他會一直download 不是新唐的東西。
這邊選&amp;quot;是&amp;quot; 跳過這裡</description>
    </item>
    
    <item>
      <title>Keil IDE 16K Code size 限制?</title>
      <link>https://weizongchen.github.io/blog/keil_ide_licence/</link>
      <pubDate>Thu, 16 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/keil_ide_licence/</guid>
      <description>如果你不是商業使用 !
如果你不是商業使用 !
如果你不是商業使用 !
很重要所以說三次! 所以如果你是個人評估使用
ARM 對這個 MDK-Community 說明</description>
    </item>
    
    <item>
      <title>ICP 使用說明</title>
      <link>https://weizongchen.github.io/blog/icp_introduce/</link>
      <pubDate>Sat, 11 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/icp_introduce/</guid>
      <description>可以直接來這邊下載 https://www.nuvoton.com/tool-and-software/debugger-and-programmer/mass-production-tool/
ICP Tool 新唐燒錄器適用於新唐NuMicro®微控制器的大量生產階段。基於靈活的設定與直觀的操作，使用者可全面掌握量產流程。
選擇你的series
如果你電腦插著很多個NuLnk 可以選，點選Radio Button時，那個被指定的NuLnk會閃閃閃閃閃~</description>
    </item>
    
    <item>
      <title>GPIO 說明</title>
      <link>https://weizongchen.github.io/blog/gpio_introduce/</link>
      <pubDate>Fri, 10 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/gpio_introduce/</guid>
      <description>User Manual https://www.nuvoton.com/export/resource-files/UM_NuMaker-ETM-M487_User_Manual_EN_Rev1.01.pdf
通用 I/O (GPIO) 概述 M480 系列多達118 個通用I/O管腳和其他功能管腳共享，這取決於芯片的配置。 118個管腳分配在PA, PB, PC, PD, PE, PF, PG 和 PH這8個端口上。 PA, PB, PE和PG有16個管腳，PC，PD有15個管腳，PF，PH有12個管腳。每個管腳都是獨立的，都有相應的寄存器位來控制管腳功能模式與數據。</description>
    </item>
    
    <item>
      <title>MA35D1 M4 使用設定</title>
      <link>https://weizongchen.github.io/blog/ma35d1_rtp/</link>
      <pubDate>Tue, 07 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_rtp/</guid>
      <description>Description Enable the Remoteproc device driver in the Linux kernel.</description>
    </item>
    
    <item>
      <title>MA35D1 Yocto 安裝說明</title>
      <link>https://weizongchen.github.io/blog/ma35d1_install_method/</link>
      <pubDate>Mon, 06 Jun 2022 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/ma35d1_install_method/</guid>
      <description>MA35D16A887C (BGA312) MCP package with DDR3L (256 MB)
7-inch TFT LCD (1024x600) with touch daughter board</description>
    </item>
    
    <item>
      <title>自己的問題筆記</title>
      <link>https://weizongchen.github.io/blog/question/</link>
      <pubDate>Mon, 03 May 2021 23:24:00 +0800</pubDate>
      
      <guid>https://weizongchen.github.io/blog/question/</guid>
      <description>要找這個Register
問這個PDBIASEN bit 找不到&amp;hellip;..
CLK-&amp;gt;LDOCTL |= CLK_LDOCTL_PDBIASEN_Msk;
Clock, LDO control Rigister, PDBIASEN 這個 bit</description>
    </item>
    
    <item>
      <title>OpenCV 環境安裝</title>
      <link>https://weizongchen.github.io/blog/opencv_env/</link>
      <pubDate>Wed, 29 Jan 2020 10:07:47 +0600</pubDate>
      
      <guid>https://weizongchen.github.io/blog/opencv_env/</guid>
      <description>系統環境 Windows 10 VS 2019 OpenCV 4.5.5 選擇 Windows 版本的OpenCV download下來 解壓縮到指定資料夾 可以在C 根目錄建一個 OpenCV 資料夾，在OpenCV資料夾下再建一個OpenCV4.</description>
    </item>
    
  </channel>
</rss>
